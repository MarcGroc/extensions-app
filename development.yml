version: '3.8'
services:
  django: &django
    build:
      context: .
      dockerfile: backend/Dockerfile
    image: dev-django
    container_name: dev-django-djavue
    hostname: django
    depends_on:
      - db
      - redis
      - mailpit
    volumes:
      - ./backend:/app
    env_file:
      - .env
    ports:
      - '8000:8000'
    networks:
      - dev
    restart: unless-stopped

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    image: dev-frontend
    container_name: dev-frontend-djavue
    hostname: frontend
    volumes:
      - ./frontend:/app
    ports:
      - '8008:8008'
    networks:
      - dev
    restart: unless-stopped

  nginx:
    image: nginx
    container_name: dev-nginx-djavue
    hostname: nginx
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
    depends_on:
      - django
      - frontend
    networks:
      - dev
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
  db:
    image: postgres:16
    container_name: dev-db-djavue
    hostname: db
    restart: unless-stopped
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${NAME}
      POSTGRES_USER: ${USER}
      POSTGRES_PASSWORD: ${PASSWORD}
    ports:
      - '5432:5432'
    volumes:
      - dev-db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - dev

  redis:
    image: redis:7-alpine
    container_name: dev-redis-djavue
    hostname: redis
    restart: on-failure
    ports:
      - '6379:6379'
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - dev

  mailpit:
    image: axllent/mailpit
    container_name: dev-mailpit-djavue
    hostname: mailpit
    restart: on-failure
    ports:
      - '1025:1025'
      - '8025:8025'
    networks:
      - dev

  celery-worker:
    <<: *django
    container_name: celery-worker-djavue
    hostname: celery-worker
    ports: []
    depends_on:
      - django
    command: ["/bin/sh", "/app/scripts/worker/start"]

  celery-beat:
    <<: *django
    container_name: celery-beat-djavue
    hostname: celery-beat
    depends_on:
      - django
    ports: []
    command: ["/bin/sh", "/app/scripts/beat/start"]

  flower:
    <<: *django
    container_name: flower-djavue
    hostname: flower
    ports:
      - '5555:5555'
    command: ["/bin/sh", "/app/scripts/flower/start"]

  prometheus:
    image: prom/prometheus:v2.51.2
    container_name: prometheus-djavue
    hostname: prometheus
    restart: unless-stopped
    ports:
      - '9090:9090'
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - dev
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  grafana:
    image: grafana/grafana:10.4.2
    container_name: grafana-djavue
    hostname: grafana
    restart: unless-stopped
    ports:
      - '4000:4000'
    networks:
      - dev
    volumes:
      - ./grafana:/var/lib/grafana
volumes:
  dev-db:

networks:
  dev:
    driver: bridge
